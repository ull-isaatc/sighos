/**
 * 
 */
package es.ull.isaatc.rli;

import simkit.random.RandomVariateFactory;
import es.ull.isaatc.function.ConstantFunction;
import es.ull.isaatc.function.PeriodicProportionFunction;
import es.ull.isaatc.function.TimeFunction;
import es.ull.isaatc.function.TimeFunctionFactory;
import es.ull.isaatc.function.UniformlyDistributedSplitFunction;
import es.ull.isaatc.simulation.ElementCreator;
import es.ull.isaatc.simulation.ElementType;
import es.ull.isaatc.simulation.Resource;
import es.ull.isaatc.simulation.ResourceType;
import es.ull.isaatc.simulation.StandAloneLPSimulation;
import es.ull.isaatc.simulation.TimeDrivenGenerator;
import es.ull.isaatc.simulation.TransitionActivity;
import es.ull.isaatc.simulation.TransitionSingleMetaFlow;
import es.ull.isaatc.simulation.WorkGroup;
import es.ull.isaatc.util.Cycle;
import es.ull.isaatc.util.PeriodicCycle;

/**
 * @author Iván
 *
 */
public class RLIIP14GSimulation extends StandAloneLPSimulation {
	static final int NDAYS = 364 * 2;
	
	public enum AdmissionMethod {
		AE ("A&E(Emergencies)", 
				new double[] {0.374,0.158,0.136,0.198,0.054,0.036,0.01,0.013,0.002,0.002,0.011,0.001,0.002,0.003,0,0},
				new int[] {153,143,140,171,157,175,153,139,153,175,182,144,133,159,125,134,158,151,142,152,133,145,145,150,153,115,188,140,121,119,123,116,144,140,140,123,135,155,175,158,145,153,142,202,181,139,132,153,160,146,178,153},
				new double[] {0.150395106,0.141345909,0.138159572,0.132041805,0.143385164,0.144404792,0.150267652}), 
		GP ("GP_Request(Emergencies)", 
				new double [] {0.314,0.23,0.19,0.05,0.066,0.068,0.025,0.014,0.019,0.009,0,0.006,0.002,0.001,0.004,0.002},
				new int[] {128,161,155,157,195,168,144,157,162,167,171,184,173,172,155,123,140,128,172,144,162,153,133,150,145,140,124,147,147,158,161,182,165,177,179,195,178,171,143,168,132,147,164,152,167,152,158,174,173,134,112,128},
				new double[] {0.165473735,0.161712969,0.162926119,0.15358486,0.166929516,0.094625743,0.094747058}), 
		OR ("Ordinary(Electives)", 
				new double [] {0.017,0.258,0.011,0.184,0,0.147,0.11,0.126,0.032,0.01,0.003,0.014,0.015,0.02,0,0.053},
				new int[] {23,14,17,11,1,0,0,7,15,19,22,9,0,10,17,19,21,20,4,1,5,17,21,21,20,9,1,0,7,
				18,22,18,7,0,9,40,16,9,13,24,0,10,9,12,26,15,7,1,11,23,16,16,17,6,0,1,13,9,
				21,11,6,0,7,22,13,17,17,12,1,2,28,24,12,16,20,1,5,25,16,18,16,7,1,6,21,15,
				20,16,7,0,9,23,9,19,21,12,0,10,18,20,15,10,6,1,11,21,17,20,13,11,1,6,21,20,
				23,15,11,0,3,25,10,9,13,8,0,6,25,11,15,16,4,0,3,23,25,17,15,6,0,8,16,11,17,
				7,3,0,0,6,21,28,14,13,1,6,24,12,19,16,11,0,6,20,16,17,20,9,0,8,16,13,22,16,
				7,1,10,21,14,21,15,13,0,8,28,14,12,5,3,0,9,17,13,19,35,10,0,8,19,18,27,26,
				14,0,10,14,21,15,18,11,0,9,24,19,27,21,10,0,10,18,11,19,17,7,0,8,24,16,24,
				19,7,1,8,18,14,21,19,16,0,1,25,13,22,19,9,0,8,21,11,17,23,9,1,6,18,18,15,16,
				10,0,7,22,12,16,8,0,0,0,2,5,9,7,3,0,0,6,16,21,18,9,0,4,28,17,25,17,8,0,9,24,
				15,14,16,11,0,5,19,15,15,15,14,2,10,20,9,19,11,7,0,7,18,19,22,16,10,1,7,18,
				9,17,19,16,1,7,18,13,16,20,10,0,15,24,5,17,19,6,1,7,13,13,19,15,5,2,8,17,15,
				15,14,2,0,16,21,15,21,2,0,0,0,5,10,7,3,0,0,0},
				new double[] {1.0});
		
//				new int[] {75,57,87,93,85,88,83,80,67,86,84,86,73,78,77,76,85,75,57,57,44,68,90,79,72,75,91,88,76,49,86,68,81,60,65,68,66,52,33,47,46,55,50,79,68,77,76,78,87,85,82,75},
//				new double[] {0.16174921,0.238145416,0.181506849,0.223656481,0.172550053,0.012908325,0.009483667});
		
		private final String name;
		private final double [] prob;
		private final int []patientsWeek;
		private final double []patientsDaily;
		private AdmissionMethod(String name, double []prob, int []patientsWeek, double []patientsDaily) {
			this.name = name;
			this.prob = prob;
			this.patientsWeek = patientsWeek;
			this.patientsDaily = patientsDaily;
		}
		public String getName() { return name; }
		public double[] getProb() { return prob; }
		public int[] getPatientsWeek() { return patientsWeek; }
		public double[] getPatientsDaily() { return patientsDaily; }
	}
	
	public enum Specialty {
		$300 ("GENERAL MEDICINE", 
				new double[][] {{0.001784758,0.080671069,0,0.000713903,0.000178476,0.000535427,0.833839015,0.070854899,0.000892379,0.006960557,0.000535427,0.00214171,0.000356952,0.000535427,0},
				{0,0.005555556,0,0.055555556,0,0.005555556,0.011111111,0.033333333,0.005555556,0,0,0.011111111,0,0,0.872222222},
				{0.003752345,0,0,0.009380863,0,0.011257036,0.039399625,0.347091932,0,0,0,0.003752345,0,0,0.585365854},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0.002247191,0,0.105617978,0,0,0.004494382,0.026966292,0,0.006741573,0.004494382,0.004494382,0,0,0.84494382},
				{0,0,0,0.105263158,0,0,0,0.157894737,0,0,0,0,0,0,0.736842105},
				{0.018181818,0.036363636,0,0,0,0,0.072727273,0.327272727,0,0,0.2,0.018181818,0,0,0.327272727},
				{0.026494277,0.012505299,0.000211954,0.037515897,0.001059771,0.003815176,0,0.51907588,0.013353116,0.00402713,0.003179313,0.015048749,0.001059771,0.004874947,0.35777872},
				{0.01318752,0.004503056,0,0.059183017,0.003859762,0.005789643,0.002894821,0.004824702,0.012865873,0.002894821,0.010614345,0.040527501,0.003538115,0.020585397,0.814731425},
				{0,0.026086957,0,0.026086957,0,0,0.008695652,0.060869565,0,0,0.008695652,0.034782609,0,0,0.834782609},
				{0,0.014285714,0,0,0.014285714,0.028571429,0.071428571,0.042857143,0.028571429,0,0.3,0.114285714,0.014285714,0.028571429,0.342857143},
				{0,0,0,0.056179775,0,0.078651685,0,0.02247191,0.011235955,0,0,0.04494382,0,0.011235955,0.775280899},
				{0.004149378,0,0,0.029045643,0,0,0.008298755,0.037344398,0.012448133,0,0,0.029045643,0.004149378,0.01659751,0.858921162},
				{0,0,0,0,0,0,0,0.1,0,0,0.1,0,0,0,0.8},
				{0,0,0,0.010309278,0,0,0,0.010309278,0,0,0.010309278,0.020618557,0,0,0.948453608}},
				new double[][] {{0.014492754,0.028985507,0,0,0.014492754,0,0.043478261,0.797101449,0.057971014,0.014492754,0,0.028985507,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0.5,0,0,0,0,0,0,0.5},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0.5,0,0,0,0,0,0,0.5},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0.666666667,0,0,0,0,0,0,0.333333333},
				{0.016949153,0,0,0,0.016949153,0.016949153,0,0,0,0,0,0.016949153,0,0,0.93220339},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}),				
		$100 ("GENERAL SURGERY",				
				new double[][] {{0,0,0.0071875,0,0.00125,0.0003125,0.0015625,0.0003125,0,0.943125,0.0253125,0.0034375,0.01625,0.00125,0},
				{0,0,0,0,0,0,0,0.111111111,0,0,0,0,0,0,0.888888889},
				{0,0,0,0,0,0,0,0.333333333,0,0,0.166666667,0,0,0,0.5},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0.045454545,0,0,0.022727273,0,0,0,0.090909091,0.022727273,0.022727273,0,0.795454545},
				{0,0,0,0,0,0,0,0,0,0.081081081,0.045045045,0.063063063,0.027027027,0.009009009,0.774774775},
				{0,0,0,0,0,0,0,0.010204082,0,0.030612245,0.724489796,0,0,0,0.234693878},
				{0,0.083333333,0,0.166666667,0,0,0,0.416666667,0,0.166666667,0,0,0,0,0.166666667},
				{0,0,0,0.083333333,0,0,0,0,0.027777778,0,0.027777778,0,0,0.027777778,0.833333333},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0.001958225,0.000979112,0.000652742,0.002284595,0.028394256,0.015665796,0.000979112,0.006527415,0.000326371,0,0.386096606,0.065926893,0.081266319,0.016644909,0.39229765},
				{0.002114165,0.001409443,0,0.018322763,0.005637773,0.033121917,0.002114165,0.003523608,0.000704722,0.007047216,0.007751938,0.029598309,0,0.018322763,0.870331219},
				{0,0,0,0.006872852,0.003436426,0.003436426,0,0,0,0,0.04467354,0.024054983,0.003436426,0.017182131,0.896907216},
				{0,0,0,0.006535948,0.035947712,0.003267974,0,0.003267974,0,0.062091503,0.147058824,0.068627451,0,0,0.673202614},
				{0,0,0,0,0,0,0,0,0,0.034090909,0.045454545,0,0,0,0.920454545}},
				new double[][] {{0,0,0.001806685,0,0.03071364,0,0,0.000903342,0,0.009033424,0.742547425,0.155374887,0.008130081,0.051490515,0},
				{0,0,0,0,0,0.25,0,0,0,0,0,0,0,0,0.75},
				{0,0,0,0,0,0,0,0.5,0,0,0.5,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0.333333333,0,0,0,0.666666667},
				{0,0,0,0,0,0,0,0,0,0,0.166666667,0.027777778,0,0,0.805555556},
				{0,0,0,0,0,0,0,0.053333333,0,0,0.92,0,0,0,0.026666667},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0.222222222,0,0,0.777777778},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0.454545455,0.090909091,0.090909091,0,0.363636364},
				{0.003198294,0.002132196,0,0.003198294,0.001066098,0.076759062,0,0.003198294,0.001066098,0,0.006396588,0.024520256,0.001066098,0.008528785,0.868869936},
				{0.005025126,0,0,0,0,0.010050251,0,0,0,0.005025126,0.125628141,0,0.005025126,0,0.849246231},
				{0,0,0,0,0.083333333,0,0,0,0,0,0.083333333,0,0,0,0.833333333},
				{0,0,0,0,0,0,0,0,0,0,0.030769231,0,0,0,0.969230769}}),
		$420 ("PAEDIATRICS",
				new double[][] {{0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},
				new double[][] {{0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}),
		$110 ("TRAUMA & ORTHOPAEDICS",
				new double[][] {{0,0,0.121715076,0,0.00230521,0,0.000922084,0,0,0.012909175,0.000461042,0.86076533,0.000922084,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0.104575163,0,0,0.006535948,0,0,0,0.013071895,0.026143791,0,0,0.849673203},
				{0,0,0,0,0,0,0,0,0,0,0,0.375,0,0,0.625},
				{0,0.05,0,0,0,0,0,0,0,0,0.05,0.65,0,0,0.25},
				{0,0,0,0,0,0,0,0.4,0,0,0,0.2,0.2,0,0.2},
				{0,0,0,0.1,0,0.1,0,0,0,0,0,0.1,0,0,0.7},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0.034482759,0,0,0,0,0,0.75862069,0.068965517,0,0.137931034},
				{0,0,0,0.25,0,0.166666667,0,0,0,0,0,0.333333333,0,0,0.25},
				{0.001468429,0.000489476,0,0.065100343,0.001468429,0.00783162,0.000978953,0.00391581,0,0.000489476,0.003426334,0.06020558,0,0.006363191,0.848262359},
				{0,0,0,0,0,0,0,0,0,0,0.2,0.2,0,0,0.6},
				{0,0,0,0,0,0,0,0,0,0,0,0.153846154,0,0,0.846153846}},
				new double[][] {{0,0,0.067650677,0,0.002460025,0,0,0,0,0,0,0.929889299,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0.25,0,0,0,0,0,0,0,0,0,0,0.75},
				{0,0,0,0,0,0,0,0,0,0,0,0.666666667,0,0,0.333333333},
				{0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0.333333333,0,0,0,0,0,0,0,0.666666667,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0.001283697,0,0.002567394,0.001283697,0.010269576,0,0.003851091,0,0,0,0.01283697,0,0,0.967907574},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}),
		$430 ("GERIATRIC MEDICINE",
				new double[][] {{0,0.018480493,0,0.052361396,0,0,0.896303901,0.025667351,0,0.003080082,0,0.004106776,0,0,0},
				{0,0,0,0.083333333,0,0,0,0.083333333,0,0,0,0,0,0,0.833333333},
				{0,0,0,0,0,0,0.090909091,0.590909091,0,0,0,0,0,0,0.318181818},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0.00137741,0,0.137741047,0,0,0.00137741,0.012396694,0.00137741,0.004132231,0.002754821,0.005509642,0.00137741,0.00137741,0.830578512},
				{0,0,0,0.25,0,0,0,0,0,0,0.25,0,0,0,0.5},
				{0,0,0,0,0,0,0,0,0,0,0.666666667,0,0,0,0.333333333},
				{0.010238908,0.003412969,0,0.411831627,0.002275313,0.001137656,0,0.439135381,0.013651877,0.002275313,0.007963595,0.009101251,0.003412969,0.001137656,0.094425484},
				{0.00678733,0,0,0.42760181,0.004524887,0,0.004524887,0.004524887,0.013574661,0.002262443,0.00678733,0.013574661,0,0.018099548,0.497737557},
				{0,0,0,0.210526316,0,0,0,0.157894737,0,0,0,0,0,0,0.631578947},
				{0,0,0,0.111111111,0,0.111111111,0.111111111,0,0,0,0.222222222,0,0.222222222,0,0.222222222},
				{0,0,0,0.368421053,0,0.052631579,0,0.052631579,0,0,0,0,0,0.052631579,0.473684211},
				{0,0,0,0.391304348,0,0,0,0.043478261,0,0,0,0.043478261,0,0.043478261,0.47826087},
				{0,0,0,0,0,0,0,0,0,0,0.333333333,0,0,0,0.666666667},
				{0,0,0,0.083333333,0,0,0,0.083333333,0,0,0,0,0,0,0.833333333}},
				new double[][] {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}),
		$502 ("GYNAECOLOGY",
				new double[][] {{0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0.666666667,0,0,0.333333333,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0.001064963,0,0,0.001064963,0,0.003194888,0,0.001064963,0,0,0.002129925,0,0,0.008519702,0.982960596}},
				new double[][] {{0,0,0.00308642,0,0,0,0,0,0,0.00154321,0,0,0,0.99537037,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0.333333333,0,0,0,0,0,0,0,0,0.333333333,0,0,0.333333333,0},
				{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0.004636785,0,0,0,0,0,0.001545595,0,0,0.99381762}}),
		$101 ("UROLOGY",
				new double[][] {{0,0,0,0,0.003448276,0,0,0,0,0.513793103,0.010344828,0.020689655,0.451724138,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0.2,0,0,0,0,0,0,0,0,0,0,0.8},
				{0,0,0,0,0,0,0,0,0,0.166666667,0,0,0.166666667,0,0.666666667},
				{0,0,0,0,0,0,0,0,0,0,0.333333333,0,0.666666667,0,0},
				{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
				{0,0,0,0.25,0,0,0,0.25,0,0,0,0,0,0,0.5},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0.00625,0,0.01875,0.00625,0,0,0,0,0.11875,0.0125,0.36875,0.03125,0.4375},
				{0,0,0,0,0.041666667,0.041666667,0,0,0,0,0,0.125,0,0,0.791666667},
				{0,0,0,0.071428571,0,0,0,0,0,0.071428571,0,0,0.071428571,0,0.785714286},
				{0.005128205,0,0,0.01025641,0.005128205,0.005128205,0.005128205,0.01025641,0,0.046153846,0.005128205,0.015384615,0,0,0.892307692},
				{0,0,0,0,0,0,0,0,0,0,0,0,0.2,0,0.8}},
				new double[][] {{0,0,0.004201681,0,0.067226891,0,0.00210084,0,0,0.031512605,0.231092437,0.069327731,0.581932773,0.012605042,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0.1,0.075,0.2,0,0.625},
				{0,0,0,0,0,0,0,0,0,0,0.7,0,0.3,0,0},
				{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0.130434783,0,0,0,0,0,0.043478261,0.086956522,0.47826087,0.043478261,0.217391304},
				{0.007874016,0,0,0,0,0.023622047,0,0,0,0,0.007874016,0.015748031,0.023622047,0,0.921259843},
				{0,0,0,0,0,0,0,0,0,0.023809524,0,0,0.047619048,0,0.928571429},
				{0,0.003289474,0,0,0.016447368,0.023026316,0,0,0,0.023026316,0.009868421,0.006578947,0,0,0.917763158},
				{0,0,0,0,0,0,0,0,0,0,0.142857143,0,0,0,0.857142857}}),
		$120 ("ENT",
				new double[][] {{0,0,0.072289157,0,0.883534137,0,0,0,0,0.032128514,0,0.008032129,0.004016064,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0.004255319,0,0.004255319,0,0.004255319,0.004255319,0.008510638,0,0.004255319,0.008510638,0.021276596,0,0.008510638,0.931914894},
				{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
				{0,0,0,0.166666667,0.166666667,0,0,0,0,0,0,0,0,0,0.666666667},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0.777777778,0,0,0,0,0,0,0.111111111,0,0,0.111111111},
				{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
				{0,0,0,0,0.625,0,0,0,0,0,0,0,0,0,0.375},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,1,0,0,0,0,0,0,0,0,0,0}},
				new double[][] {{0,0,0.227027027,0,0.74954955,0,0,0,0,0.001801802,0.003603604,0.018018018,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0.002375297,0.004750594,0,0,0.992874109},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0.666666667,0,0,0,0,0,0,0,0,0,0.333333333},
				{0,0,0,0,0.153846154,0,0,0,0,0,0,0.076923077,0,0,0.769230769},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}),
		$370 ("MEDICAL ONCOLOGY",
				new double[][] {{0.5,0,0,0,0,0,0.449494949,0.050505051,0,0,0,0,0,0,0},
				{0,0,0,0,0,0.011428571,0,0,0,0,0,0.005714286,0,0,0.982857143},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5},
				{0.696629213,0,0,0,0,0,0,0.157303371,0,0,0,0,0,0,0.146067416},
				{0.5,0,0,0.041666667,0,0,0,0,0,0,0,0,0,0,0.458333333},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},
				new double[][] {{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0.007092199,0,0,0,0,0,0,0.992907801},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}),
		$303 ("CLINICAL HAEMATOLOGY",
				new double[][] {{0.413461538,0,0,0,0,0,0.519230769,0.057692308,0,0,0,0.009615385,0,0,0},
				{0,0,0,0,0,0,0.0125,0.0125,0,0,0,0,0,0,0.975},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0.436363636,0,0,0.018181818,0,0,0,0.418181818,0,0,0,0,0,0,0.127272727},
				{0.4,0,0,0.033333333,0,0,0,0,0,0,0,0.1,0,0,0.466666667},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0.25,0,0,0,0,0,0,0,0,0,0,0,0,0,0.75},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},
				new double[][] {{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0.023255814,0,0,0,0,0,0,0.976744186},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}),
		$190 ("ANAESTHETICS",
				new double[][] {{0,0,0,0,0,0.989010989,0.010989011,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0.333333333,0,0,0,0,0,0,0.666666667},
				{0,0,0.010869565,0,0.010869565,0,0.010869565,0.326086957,0,0.010869565,0.163043478,0.054347826,0,0,0.413043478},
				{0,0,0,0,0,0.5,0,0.5,0,0,0,0,0,0,0},
				{0.029411765,0,0,0.058823529,0,0.029411765,0,0,0,0,0.029411765,0,0,0,0.852941176},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
				{0,0.0625,0,0,0,0,0,0.0625,0,0,0,0.0625,0,0,0.8125},
				{0,0,0,0.166666667,0.166666667,0,0,0,0,0,0,0,0,0,0.666666667},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},
				new double[][] {{0,0,0,0,0,0,0,0,0,0,0.111111111,0.666666667,0,0.222222222,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}}),
		$800 ("CLINICAL ONCOLOGY",
				new double[][] {{0.625,0,0,0,0,0,0.328125,0.03125,0,0.015625,0,0,0,0,0},
				{0,0,0,0,0,0.018518519,0,0,0,0,0.018518519,0,0,0,0.962962963},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0.409090909,0,0,0,0,0,0,0.363636364,0,0,0,0,0,0.045454545,0.181818182},
				{0.3,0,0,0.1,0,0,0.1,0,0,0,0.1,0,0,0,0.4},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},
				new double[][] {{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0.016666667,0,0,0.983333333},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}),
		$130 ("OPHTHALMOLOGY",
				new double[][] {{0.021276596,0,0.14893617,0,0.510638298,0,0,0,0,0.042553191,0,0.212765957,0,0.063829787,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0.125,0,0,0,0,0,0,0,0,0,0.875},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0.029411765,0,0,0,0,0,0,0,0.029411765,0.176470588,0,0.029411765,0.735294118},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0.5,0,0,0.5},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0.444444444,0,0,0,0,0,0,0.055555556,0,0.055555556,0.444444444},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0.2,0,0,0,0,0,0,0,0,0,0.8}},
				new double[][] {{0,0,0,0,0.19047619,0.023809524,0,0.023809524,0,0,0,0.357142857,0.023809524,0.380952381,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0.066666667,0.933333333},
				{0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}}),
		$140 ("ORAL SURGERY",
				new double[][] {{0,0,0.136363636,0,0.75,0,0,0,0,0.113636364,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0.054054054,0,0.027027027,0.918918919},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0.333333333,0,0,0,0,0,0,0.166666667,0.333333333,0,0.166666667},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0.333333333,0,0,0,0,0,0,0,0,0,0.666666667},
				{0,0,0,0,0.5,0,0,0,0,0,0,0,0,0,0.5},
				{0,0,0,0,0,0,0,0,0,1,0,0,0,0,0}},
				new double[][] {{0,0,0.08045977,0,0.804597701,0,0,0,0,0.011494253,0,0.08045977,0.011494253,0.011494253,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0.013513514,0,0,0,0,0.013513514,0.027027027,0,0,0.945945946},
				{0,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0.333333333,0,0,0,0,0,0,0,0,0,0.666666667},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}}),
		$410 ("RHEUMATOLOGY",
				new double[][] {{0,0,0,0.783783784,0,0,0.189189189,0.027027027,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0.5,0,0,0,0,0,0,0.5},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0.03030303,0,0,0,0,0,0,0,0,0,0,0,0,0.96969697},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0.142857143,0.142857143,0,0.571428571,0,0,0,0.142857143,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},
				new double[][] {{0,0,0,0.875,0,0,0.125,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0.111111111,0,0,0,0,0,0,0.888888889},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
				{0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}),
		$330 ("DERMATOLOGY",
				new double[][] {{0,0,0.136363636,0,0,0,0.090909091,0.045454545,0.727272727,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0.5,0,0,0,0,0,0,0.5,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},
				new double[][] {{0,0,0.034188034,0,0,0,0,0,0.965811966,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{0,0.004424779,0,0,0,0,0,0.004424779,0,0,0,0.004424779,0,0.004424779,0.982300885},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}});

		private final String name;
		private double[][] emerMatrix;
		private double[][] elecMatrix;
		private Specialty(String name, double [][]emerMatrix, double [][]elecMatrix) {
			this.name = name;
			this.emerMatrix = emerMatrix;
			this.elecMatrix = elecMatrix;
		}
		public String getName() { return name; }
		public double[][] getEmerMatrix() { return emerMatrix; }
		public double[][] getElecMatrix() { return elecMatrix; }
	}	

	public enum WardType {
		CANCER ("Cancer care wards", 10, "ExponentialVariate", new Object[] {4.43}, 
				"ExponentialVariate", new Object[] {2.5}),
		CC ("Coronary Care", 6, "ExponentialVariate", new Object[] {2.6}, 
				"ExponentialVariate", new Object[] {2.4}),
		CHILDREN ("Paediatric", 24, "ExponentialVariate", new Object[] {1.3}, 
				"ExponentialVariate", new Object[] {1.65}),
		ELDERLY ("Elderly Wards", 100, "HyperExponentialVariate", new Object[] {15.9337887001623, 15.933783099126, 0.5}, 
				"HyperExponentialVariate", new Object[] {9.51647126376783, 18.8046296552964, 0.5}),
		ENT ("ENT", 8, "ExponentialVariate", new Object[] {1.8}, 
				"ExponentialVariate", new Object[] {1.3}),
		ITU ("ITU", 8, "HyperExponentialVariate", new Object[] {4.8, 6.2, 0.5}, 
				"HyperExponentialVariate", new Object[] {2.2, 4.8, 0.5}),
		MAU ("Medical Assessment Ward", 17, "EmpiricalVariate", new Object[] {
				new double[] {0.439744513065383, 0.430288500920493, 0.0922327595124107, 0.0262690140089955, 0.0114652124927178},
				new double[] {0.25, 0.8, 2.1, 3.1, 4.1}}, 
				"EmpiricalVariate", new Object[] {
				new double[] {0.439744513065383, 0.430288500920493, 0.0922327595124107, 0.0262690140089955, 0.0114652124927178},
				new double[] {0.25, 0.8, 2.1, 3.1, 4.1}}),
		MEDICINE ("Medical Wards", 78, "ExponentialVariate", new Object[] {6.68207498715973}, 
				"ExponentialVariate", new Object[] {5.16279069767442}),
		MIX ("Derma-Geriatric-Medicine", 12, "ExponentialVariate", new Object[] {8.1}, 
				"ExponentialVariate", new Object[] {11.7}),
		SAU ("Surgical Assessment Ward", 15, "EmpiricalVariate", new Object[] { 
				new double[] {0.439744513065383, 0.430288500920493, 0.0922327595124107, 0.0262690140089955, 0.0114652124927178},
				new double[] {0.25, 0.8, 2.1, 3.1, 4.1}}, 
				"EmpiricalVariate", new Object[] {
				new double[] {0.439744513065383, 0.430288500920493, 0.0922327595124107, 0.0262690140089955, 0.0114652124927178},
				new double[] {0.25, 0.8, 2.1, 3.1, 4.1}}),
		SURGERY ("General Surgery", 55, "HyperExponentialVariate", new Object[] {2.74927036043212, 11.2119097638434, 0.5}, 
				"HyperExponentialVariate", new Object[] {2.48524136957044, 6.97821244583691, 0.5}),
		TO ("TandO", 74, "HyperExponentialVariate", new Object[] {4.5, 8.5, 0.5}, 
				"HyperExponentialVariate", new Object[] {3.8, 5.3, 0.5}),
		UROLOGY ("Urology", 10, "ExponentialVariate", new Object[] {3.3}, 
				"ExponentialVariate", new Object[] {3.2}),
		WOMEN ("Gynaecology", 48, "ExponentialVariate", new Object[] {1.6}, 
				"ExponentialVariate", new Object[] {3.67});

		private final String name;
		private final int beds;
		private final String emerDist;
		private final Object []emerParam;
		private final String elecDist;
		private final Object []elecParam;
		
		private WardType(String name, int beds, String emerDist,
				Object[] emerParam, String elecDist, Object[] elecParam) {
			this.name = name;
			this.beds = beds;
			this.emerDist = emerDist;
			this.emerParam = emerParam;
			this.elecDist = elecDist;
			this.elecParam = elecParam;
		}

		public String getName() { return name;	}
		public int getBeds() { return beds;	}
		public String getEmerDist() { return emerDist; }
		public Object[] getEmerParam() { return emerParam; }
		public String getElecDist() { return elecDist; }
		public Object[] getElecParam() { return elecParam; }
	}

	
	public RLIIP14GSimulation(int id) {
		super(id, "RLI Inpatient Model", 0.0, NDAYS);
	}
	
	protected void testModel() {
		// Defines the patient types
		for (Specialty spec : Specialty.values()) {
			new ElementType(AdmissionMethod.AE.ordinal() * Specialty.values().length + spec.ordinal(), this, "" + AdmissionMethod.AE + "/" + spec, 0);
			new ElementType(AdmissionMethod.GP.ordinal() * Specialty.values().length + spec.ordinal(), this, "" + AdmissionMethod.GP + "/" + spec, 0);
			new ElementType(AdmissionMethod.OR.ordinal() * Specialty.values().length + spec.ordinal(), this, "" + AdmissionMethod.OR + "/" + spec, 1);
		}

		// Defines resource types, resources and Workgroups
		int resCount = 0;
		Cycle c = new PeriodicCycle(0.0, TimeFunctionFactory.getInstance("ConstantVariate", endTs), 0);
		for (WardType ward : WardType.values()) {
			ResourceType rt = new ResourceType(ward.ordinal(), this, "W" + ward);
			for (int i = 0; i < ward.getBeds(); i++)
				new Resource(resCount++, this, "BED" + i + "_W" + ward).addTimeTableEntry(c, endTs, rt);
			WorkGroup wg = new WorkGroup(ward.ordinal(), this, "WG" + ward);
			wg.add(rt, 1);
		}

		// Element creators
		ElementCreator [] creators = new ElementCreator[AdmissionMethod.values().length];
		creators[AdmissionMethod.AE.ordinal()] = new ElementCreator(new ConstantFunction(1));
		creators[AdmissionMethod.GP.ordinal()] = new ElementCreator(new ConstantFunction(1));
		creators[AdmissionMethod.OR.ordinal()] = new ElementCreator(new PeriodicProportionFunction(AdmissionMethod.OR.getPatientsWeek(), AdmissionMethod.OR.getPatientsDaily(), 1.0));
//		for (AdmissionMethod adm : AdmissionMethod.values())
//			creators[adm.ordinal()] = new ElementCreator(new ConstantFunction(1));

		// Defines activities, flows and generators
		for (Specialty spec : Specialty.values()) {
			// First activities and flows
			TransitionActivity actEmer = new TransitionActivity(spec.ordinal(), this, "EMER " + spec + ": Stay in bed", 0);
			TransitionSingleMetaFlow fEmer = new TransitionSingleMetaFlow(spec.ordinal(), RandomVariateFactory.getInstance("ConstantVariate", 1), actEmer);
			TransitionActivity actElec = new TransitionActivity(Specialty.values().length + spec.ordinal(), this, "ELEC" + spec + ": Stay in bed", 1);
			TransitionSingleMetaFlow fElec = new TransitionSingleMetaFlow(Specialty.values().length + spec.ordinal(), RandomVariateFactory.getInstance("ConstantVariate", 1), actElec);
			for (WardType ward : WardType.values()) {
				WorkGroup wg = getWorkGroup(ward.ordinal());
				actEmer.addWorkGroup(TimeFunctionFactory.getInstance(ward.getEmerDist(), ward.getEmerParam()), wg);
				actElec.addWorkGroup(TimeFunctionFactory.getInstance(ward.getElecDist(), ward.getElecParam()), wg);
			}
			// Defines transitions
			actEmer.addTransitions(spec.getEmerMatrix());
			// FIXME: These activities shouldn't be created
			if (!actEmer.checkTransitions() && 
					((AdmissionMethod.AE.getProb()[spec.ordinal()] > 0.0) || (AdmissionMethod.GP.getProb()[spec.ordinal()] > 0.0)))
				throw new RuntimeException("INVALID MATRIX. ACTIVITY " + actEmer.getDescription());
			actElec.addTransitions(spec.getElecMatrix());
			if (!actElec.checkTransitions() && (AdmissionMethod.OR.getProb()[spec.ordinal()] > 0.0))
				throw new RuntimeException("INVALID MATRIX. ACTIVITY " + actElec.getDescription());
			// Adds type of patients to creators
			creators[AdmissionMethod.AE.ordinal()].add(getElementType(AdmissionMethod.AE.ordinal() * Specialty.values().length + spec.ordinal()), fEmer, AdmissionMethod.AE.prob[spec.ordinal()]);			
			creators[AdmissionMethod.GP.ordinal()].add(getElementType(AdmissionMethod.GP.ordinal() * Specialty.values().length + spec.ordinal()), fEmer, AdmissionMethod.GP.prob[spec.ordinal()]);			
			creators[AdmissionMethod.OR.ordinal()].add(getElementType(AdmissionMethod.OR.ordinal() * Specialty.values().length + spec.ordinal()), fElec, AdmissionMethod.OR.prob[spec.ordinal()]);			
		}
			
		// Defines main cycle (starting at 8h) and element generators
		AdmissionMethod adm = AdmissionMethod.AE;
		TimeFunction[] part = new TimeFunction[adm.patientsWeek.length * adm.patientsDaily.length];
		int ind = 0;
		for (int pw : adm.patientsWeek)
			for (double p : adm.patientsDaily)
				part[ind++] = TimeFunctionFactory.getInstance("ExponentialVariate", 1.0 / (pw * p));
		Cycle subCycle = new PeriodicCycle(0.0, new UniformlyDistributedSplitFunction(part, 1.0), 0); 
		Cycle dailyCycle = new PeriodicCycle(0.0001, TimeFunctionFactory.getInstance("ConstantVariate", 1.0), 0, subCycle);
		new TimeDrivenGenerator(this, creators[adm.ordinal()], dailyCycle);
		
		adm = AdmissionMethod.GP;
		part = new TimeFunction[adm.patientsWeek.length * adm.patientsDaily.length];
		ind = 0;
		for (int pw : adm.patientsWeek)
			for (double p : adm.patientsDaily)
				part[ind++] = TimeFunctionFactory.getInstance("ExponentialVariate", 1.0 / (pw * p));
		subCycle = new PeriodicCycle(0.0, new UniformlyDistributedSplitFunction(part, 1.0), 0); 
		dailyCycle = new PeriodicCycle(0.0001, TimeFunctionFactory.getInstance("ConstantVariate", 1.0), 0, subCycle);
		new TimeDrivenGenerator(this, creators[adm.ordinal()], dailyCycle);
		
		adm = AdmissionMethod.OR;
		dailyCycle = new PeriodicCycle(0.0001, TimeFunctionFactory.getInstance("ConstantVariate", 1.0), 0);
		new TimeDrivenGenerator(this, creators[adm.ordinal()], dailyCycle);

//		for (AdmissionMethod adm : AdmissionMethod.values()) {
//			TimeFunction[] part = new TimeFunction[adm.patientsWeek.length * adm.patientsDaily.length];
//			int ind = 0;
//			for (int pw : adm.patientsWeek)
//				for (double p : adm.patientsDaily)
//					part[ind++] = TimeFunctionFactory.getInstance("ExponentialVariate", 1.0 / (pw * p));
//			Cycle subCycle = new PeriodicCycle(0.0, new UniformlyDistributedSplitFunction(part, 1.0), 0); 
//			Cycle dailyCycle = new PeriodicCycle(0.0001, TimeFunctionFactory.getInstance("ConstantVariate", 1.0), 0, subCycle);
//			new TimeDrivenGenerator(this, creators[adm.ordinal()], dailyCycle);
//		}
	}
	
	@Override
	protected void createModel() {
		testModel();
	}

}
