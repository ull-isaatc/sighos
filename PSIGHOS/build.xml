<project name="PSIGHOS" default="compile" basedir=".">
	<description>
    	Build file for PSIGHOS project
    </description>
	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="build" location="bin" />
	<property name="dist" location="dist" />
	<property name="doc" location="doc" />
	<!--<property name="dist" location="Z:\\simulacion\\SIGHOS\\lib" />-->
	<property name="lib" location="lib" />
	<property name="exec" location="${basedir}" />
	<property name="manifest" value="META-INF" />
	<property name="utils.src" location="../utils/src"/>
	<property name="utils.build" location="../utils/bin" />
	<property name="utils.lib" location="../utils/lib" />
	
	<path id="classpath">
		<fileset dir="${lib}">
			<include name="*.jar" />
		</fileset>
		<pathelement path="${utils.build}/" /> 
		<fileset dir="${utils.lib}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${src} into ${build} -->
		<!--<javac srcdir="${sighos.src}" destdir="${sighos.build}" />-->
		<javac srcdir="${src}" destdir="${build}">
			<classpath refid="classpath" />
		</javac>
		<copy todir="${build}" preservelastmodified="true">
			<fileset dir="${basedir}">
				<include name="*.xsd" />
			</fileset>
		</copy>

	</target>

	<target name="dist" depends="compile" description="generate the distribution">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}" />
		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/PSIGHOS.jar" basedir="${build}" includes="**/*.*" excludes="**/test/**" manifest="${basedir}/META-INF/MANIFEST.MF" />
		<jar jarfile="${dist}/utils.jar" basedir="${utils.build}" />
		<!-- copy resources from src to bin -->
		<copy todir="${dist}" preservelastmodified="true">
			<fileset dir="${lib}"/>
			<fileset dir="${utils.lib}"/>
		</copy>
	</target>

	<target name="distsrc" depends="compile" description="generate the distribution with source code">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}" />

		<!-- Copy documentation subdirectories -->
	    <mkdir   dir="${dist}/doc"/>
	    <copy    todir="${dist}/doc">
	      <fileset dir="${doc}"/>
	    </copy>
		
		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/PSIGHOS.jar" basedir="${build}" includes="**/*.*" excludes="**/test/**" manifest="${basedir}/META-INF/MANIFEST.MF" >
			<fileset dir="${src}">
				<exclude name="**/test/**"/>
			</fileset>
		</jar>
		<jar jarfile="${dist}/utils.jar" excludes="**/test/**">
			<fileset dir="${utils.src}" excludes="**/test/**"/>
			<fileset dir="${utils.build}" excludes="**/test/**"/>
		</jar>
		<!-- copy resources from src to bin -->
		<copy todir="${dist}" preservelastmodified="true">
			<fileset dir="${lib}"/>
			<fileset dir="${utils.lib}"/>
		</copy>
	</target>
	
	<target name="test" depends="compile" description="generate the distribution">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}" />
		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/test.jar" basedir="${build}" includes="**/*.*" manifest="${basedir}/META-INF/MANIFEST_TEST.MF" />
		<!-- copy resources from src to bin -->
		<copy todir="${dist}" preservelastmodified="true">
			<fileset dir="${lib}"/>
		</copy>
		<java dir="${exec}" jar="${exec}/dist/test.jar" fork="true" failonerror="true" maxmemory="128m">
			<arg value="FILE" />
		</java>
	</target>

	<!-- Creates Javadoc -->
	<target name="doc" depends="compile">
		<!-- Clean -->
		<delete dir="${doc}"/>
		<!-- Create the doc directory -->
		<mkdir dir="${doc}" />
		<javadoc destdir="${doc}" author="true" version="true" useexternalfile="true">
			<!-- Define which files / directory should get included, we include all -->
			<fileset dir="${src}" includes="**/*.java" excludes="**/test/**"/>
			<fileset dir="${utils.src}" includes="**/*.java" excludes="**/test/**"/>
		</javadoc>
	</target>

	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete includeemptydirs="true">
			<fileset dir="${build}" includes="**/*" />
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${dist}" includes="**/*" />
		</delete>
	</target>
</project>