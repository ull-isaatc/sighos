//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b26-ea3 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.10.23 at 09:55:05 AM BST 
//


package es.ull.isaatc.simulation.xml;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.AccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import es.ull.isaatc.simulation.xml.ClassReference;
import es.ull.isaatc.simulation.xml.Experiment;
import es.ull.isaatc.simulation.xml.Generator;


/**
 * <p>Java class for Experiment element declaration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;element name="Experiment">
 *   &lt;complexType>
 *     &lt;complexContent>
 *       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *         &lt;sequence>
 *           &lt;element name="simulation" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *           &lt;element name="debugMode" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *           &lt;element name="experiments" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *           &lt;element name="startTs" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *           &lt;element name="endTs" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *           &lt;element name="simulationListener" type="{}ClassReference" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;element name="generator" type="{}Generator" maxOccurs="unbounded"/>
 *         &lt;/sequence>
 *       &lt;/restriction>
 *     &lt;/complexContent>
 *   &lt;/complexType>
 * &lt;/element>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(AccessType.FIELD)
@XmlType(name = "", propOrder = {
    "simulation",
    "debugMode",
    "experiments",
    "startTs",
    "endTs",
    "simulationListener",
    "generator"
})
@XmlRootElement(name = "Experiment")
public class Experiment {

    protected String simulation;
    protected String debugMode;
    @XmlElement(type = Integer.class)
    protected int experiments;
    @XmlElement(type = Double.class)
    protected double startTs;
    @XmlElement(type = Double.class)
    protected double endTs;
    protected List<ClassReference> simulationListener;
    protected List<Generator> generator;

    /**
     * Gets the value of the simulation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSimulation() {
        return simulation;
    }

    /**
     * Sets the value of the simulation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSimulation(String value) {
        this.simulation = value;
    }

    /**
     * Gets the value of the debugMode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDebugMode() {
        return debugMode;
    }

    /**
     * Sets the value of the debugMode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDebugMode(String value) {
        this.debugMode = value;
    }

    /**
     * Gets the value of the experiments property.
     * 
     */
    public int getExperiments() {
        return experiments;
    }

    /**
     * Sets the value of the experiments property.
     * 
     */
    public void setExperiments(int value) {
        this.experiments = value;
    }

    /**
     * Gets the value of the startTs property.
     * 
     */
    public double getStartTs() {
        return startTs;
    }

    /**
     * Sets the value of the startTs property.
     * 
     */
    public void setStartTs(double value) {
        this.startTs = value;
    }

    /**
     * Gets the value of the endTs property.
     * 
     */
    public double getEndTs() {
        return endTs;
    }

    /**
     * Sets the value of the endTs property.
     * 
     */
    public void setEndTs(double value) {
        this.endTs = value;
    }

    /**
     * Gets the value of the simulationListener property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the simulationListener property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSimulationListener().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ClassReference }
     * 
     * 
     */
    public List<ClassReference> getSimulationListener() {
        if (simulationListener == null) {
            simulationListener = new ArrayList<ClassReference>();
        }
        return this.simulationListener;
    }

    /**
     * Gets the value of the generator property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the generator property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGenerator().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Generator }
     * 
     * 
     */
    public List<Generator> getGenerator() {
        if (generator == null) {
            generator = new ArrayList<Generator>();
        }
        return this.generator;
    }

}
