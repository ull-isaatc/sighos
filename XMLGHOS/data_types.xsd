<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<!--  Base component -->
	<xs:complexType name="BaseComponent">
		<xs:attribute name="model_id" type="xs:int" use="optional"/>
		<xs:attribute name="id" type="xs:int" use="optional"/>
	</xs:complexType>
	<!--  Describable component -->
	<xs:complexType name="DescComponent">
		<xs:complexContent>
			<xs:extension base="BaseComponent">
				<xs:sequence>
					<xs:element name="description" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  Component reference -->
	<xs:complexType name="ComponentRef">
		<xs:attribute name="model_id" type="xs:int" use="required"/>
		<xs:attribute name="id" type="xs:int" use="required"/>
	</xs:complexType>
	<!-- Resource types -->
	<xs:complexType name="ResourceType">
		<xs:complexContent>
			<xs:extension base="DescComponent"/>
		</xs:complexContent>
	</xs:complexType>
	<!-- Work groups -->
	<xs:complexType name="WorkGroup">
		<xs:complexContent>
			<xs:extension base="DescComponent">
				<xs:sequence>
					<xs:element name="role" maxOccurs="unbounded" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="rt_ref" type="ComponentRef"/>
								<xs:element name="units" type="xs:int"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Resources -->
	<xs:complexType name="Resource">
		<xs:complexContent>
			<xs:extension base="DescComponent">
				<xs:sequence>
					<xs:element default="1" name="units" type="xs:int"/>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="timeTable">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" name="rt_ref" type="ComponentRef"/>
								<xs:element name="cycle" type="Cycle"/>
								<xs:element name="dur">
									<xs:complexType>
										<xs:simpleContent>
											<xs:extension base="xs:int">
												<xs:attribute name="timeUnit" type="CommonFreq" use="optional"/>
											</xs:extension>
										</xs:simpleContent>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Activities -->
	<xs:complexType name="Activity">
		<xs:complexContent>
			<xs:extension base="DescComponent">
				<xs:sequence>
					<xs:element default="0" name="priority" type="xs:int"/>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="workGroup">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="BaseComponent">
									<xs:sequence>
										<xs:choice>
											<xs:element name="workGroup" type="ComponentRef"/>
											<xs:element name="definition" type="WorkGroup"/>
										</xs:choice>
										<xs:element name="priority" type="xs:int"/>
										<xs:element name="duration" type="FunctionChoice"/>
									</xs:sequence>
									<xs:attribute name="timeUnit" type="CommonFreq" use="optional"/>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="presential" type="xs:boolean" use="optional" default="true"/>
				<xs:attribute name="interrumpible" type="xs:boolean" use="optional" default="false"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Element type -->
	<xs:complexType name="ElementType">
		<xs:complexContent>
			<xs:extension base="DescComponent">
				<xs:sequence>
					<xs:element name="priority" type="xs:int"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Root flow -->
	<xs:complexType name="RootFlow">
		<xs:complexContent>
			<xs:extension base="DescComponent">
				<xs:sequence>
					<xs:element name="flow" type="FlowChoice"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Workflow patterns -->
	<!-- Base Flow -->
	<xs:complexType name="Flow">
		<xs:complexContent>
			<xs:extension base="BaseComponent">
				<xs:sequence>
					<xs:element minOccurs="0" name="iterations" type="RandomNumber"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Single -->
	<xs:complexType name="SingleFlow">
		<xs:complexContent>
			<xs:extension base="Flow">
				<xs:sequence>
					<xs:element name="act_ref" type="ComponentRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Packed root flow -->
	<xs:complexType name="PackageFlow">
		<xs:complexContent>
			<xs:extension base="Flow">
				<xs:sequence>
					<xs:element name="rootFlow_ref" type="ComponentRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Exit flow -->
	<xs:complexType name="ExitFlow">
		<xs:complexContent>
			<xs:extension base="Flow"/>
		</xs:complexContent>
	</xs:complexType>
	<!-- Sequence -->
	<xs:complexType name="SequenceFlow">
		<xs:complexContent>
			<xs:extension base="Flow">
				<xs:sequence>
					<xs:choice maxOccurs="unbounded" minOccurs="0">
						<xs:element name="single" type="SingleFlow"/>
						<xs:element name="package" type="PackageFlow"/>
						<xs:element name="sequence" type="SequenceFlow"/>
						<xs:element name="simultaneous" type="SimultaneousFlow"/>
						<xs:element name="decision" type="DecisionFlow"/>
						<xs:element name="type" type="TypeFlow"/>
						<xs:element name="exit" type="ExitFlow"/>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Simultaneous (parallel split) -->
	<xs:complexType name="SimultaneousFlow">
		<xs:complexContent>
			<xs:extension base="Flow">
				<xs:sequence>
					<xs:choice maxOccurs="unbounded" minOccurs="0">
						<xs:element name="single" type="SingleFlow"/>
						<xs:element name="package" type="PackageFlow"/>
						<xs:element name="sequence" type="SequenceFlow"/>
						<xs:element name="simultaneous" type="SimultaneousFlow"/>
						<xs:element name="decision" type="DecisionFlow"/>
						<xs:element name="type" type="TypeFlow"/>
						<xs:element name="exit" type="ExitFlow"/>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Decision (exclusive choice) -->
	<xs:complexType name="DecisionFlow">
		<xs:complexContent>
			<xs:extension base="Flow">
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="option" type="DecisionOption"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Decision Option -->
	<xs:complexType name="DecisionOption">
		<xs:complexContent>
			<xs:extension base="Flow">
				<xs:choice>
					<xs:element name="single" type="SingleFlow"/>
					<xs:element name="package" type="PackageFlow"/>
					<xs:element name="sequence" type="SequenceFlow"/>
					<xs:element name="simultaneous" type="SimultaneousFlow"/>
					<xs:element name="decision" type="DecisionFlow"/>
					<xs:element name="type" type="TypeFlow"/>
					<xs:element name="exit" type="ExitFlow"/>
				</xs:choice>
				<xs:attribute name="prob" type="xs:float" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Type bifurcation -->
	<xs:complexType name="TypeFlow">
		<xs:complexContent>
			<xs:extension base="Flow">
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="branch" type="TypeBranch"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Type branch -->
	<xs:complexType name="TypeBranch">
		<xs:complexContent>
			<xs:extension base="Flow">
				<xs:sequence>
					<xs:element maxOccurs="unbounded" name="elementType" type="ComponentRef"/>
					<xs:choice>
						<xs:element name="single" type="SingleFlow"/>
						<xs:element name="package" type="PackageFlow"/>
						<xs:element name="sequence" type="SequenceFlow"/>
						<xs:element name="simultaneous" type="SimultaneousFlow"/>
						<xs:element name="decision" type="DecisionFlow"/>
						<xs:element name="type" type="TypeFlow"/>
						<xs:element name="exit" type="ExitFlow"/>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Flow type choice -->
	<xs:complexType name="FlowChoice">
		<xs:complexContent>
			<xs:extension base="Flow">
				<xs:choice>
					<xs:element name="single" type="SingleFlow"/>
					<xs:element name="package" type="PackageFlow"/>
					<xs:element name="sequence" type="SequenceFlow"/>
					<xs:element name="simultaneous" type="SimultaneousFlow"/>
					<xs:element name="decision" type="DecisionFlow"/>
					<xs:element name="type" type="TypeFlow"/>
					<xs:element name="exit" type="ExitFlow"/>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!-- TimeFunction element description -->
	<xs:complexType name="TimeFunction"/>

	<!-- Function selection -->
	<xs:complexType name="FunctionChoice">
		<xs:choice>
			<xs:element name="constant" type="ConstantFunction"/>
			<xs:element name="poly" type="PolyFunction"/>
			<xs:element name="random" type="RandomNumber"/>
		</xs:choice>
	</xs:complexType>

	<!-- Constant function description -->
	<xs:complexType name="ConstantFunction">
		<xs:complexContent>
			<xs:extension base="TimeFunction">
				<xs:sequence>
					<xs:element name="value" type="xs:double"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!-- Function description -->
	<xs:complexType name="PolyFunction">
		<xs:complexContent>
			<xs:extension base="TimeFunction">
				<xs:sequence>
					<xs:element maxOccurs="unbounded" name="param" type="FunctionChoice"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!-- Random number description -->
	<xs:complexType name="RandomNumber">
		<xs:complexContent>
			<xs:extension base="TimeFunction">
				<xs:choice>
					<xs:sequence>
						<xs:element name="op" type="Operation"/>
						<xs:element maxOccurs="2" minOccurs="2" name="operand" type="RandomNumber"/>
					</xs:sequence>
					<xs:sequence>
						<xs:element name="function" type="xs:string"/>
						<xs:element maxOccurs="unbounded" name="param" type="xs:double"/>
					</xs:sequence>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:simpleType name="Operation">
		<xs:restriction base="xs:string">
			<xs:enumeration value="ADDITION"/>
			<xs:enumeration value="MULTIPLICATION"/>
		</xs:restriction>
	</xs:simpleType>
	
	<!-- Rounded Cycle type -->
	<xs:simpleType name="RoundedCycleType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="ROUND"/>
			<xs:enumeration value="CEIL"/>
			<xs:enumeration value="FLOOR"/>
		</xs:restriction>
	</xs:simpleType>
		
	<!-- Cycle description -->
	<xs:complexType name="Cycle">
		<xs:sequence> <!-- periodic cycle -->
			<xs:choice>
				<xs:sequence>
					<xs:element name="timeUnit" type="CommonFreq"/>
					<xs:element name="startTs" type="xs:double"/>
					<xs:choice>
						<xs:element name="iterations" type="xs:int"/>
						<xs:element name="endTs" type="xs:double"/>
					</xs:choice>
					<xs:element name="period" type="FunctionChoice"/>
					<xs:sequence minOccurs="0">
						<xs:element name="roundType" type="RoundedCycleType"/>
						<xs:element name="factor" type="xs:double"/>
					</xs:sequence>
				</xs:sequence>
				<xs:sequence> <!-- table cycle -->
					<xs:element maxOccurs="unbounded" name="ts" type="xs:double"/>
				</xs:sequence>
			</xs:choice> 
			<xs:element minOccurs="0" name="subCycle" type="Cycle"/>
		</xs:sequence>
		<xs:attribute name="type" type="CycleType" use="required"/>
	</xs:complexType>
	
	<!-- Cycle type description -->
	<xs:simpleType name="CycleType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="PERIODIC"/>
			<xs:enumeration value="TABLE"/>
			<xs:enumeration value="ROUNDED"/>
		</xs:restriction>
	</xs:simpleType>
	
	<!-- Time unit values -->
	<xs:simpleType name="CommonFreq">
		<xs:restriction base="xs:string">
			<xs:enumeration value="YEAR"/>
			<xs:enumeration value="MONTH"/>
			<xs:enumeration value="DAY"/>
			<xs:enumeration value="HOUR"/>
			<xs:enumeration value="MINUTE"/>
			<xs:enumeration value="SECOND"/>
		</xs:restriction>
	</xs:simpleType>
	
	<!-- Class reference description -->
	<xs:complexType name="ClassReference">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element minOccurs="0" name="classpath" type="xs:string"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="param">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required"/>
					<xs:attribute name="type" type="xs:string" use="required"/>
					<xs:attribute name="value" type="xs:string" use="required"/>
				</xs:complexType>				
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="vector" type="Vector"/>
		</xs:sequence>
	</xs:complexType>
	
	<!-- Vector of values description --> 	
	<xs:complexType name="Vector">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="param" type="xs:string"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="type" type="xs:string" use="required"/>
	</xs:complexType>
</xs:schema>
